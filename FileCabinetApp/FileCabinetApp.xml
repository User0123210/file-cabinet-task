<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FileCabinetApp</name>
    </assembly>
    <members>
        <member name="T:FileCabinetApp.CustomValidator">
            <summary>
            Validates record parameter by custom rules.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CustomValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.#ctor(System.Int32,System.Int32,System.Decimal,System.DateTime,System.Char[])">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CustomValidator"/> class.
            </summary>
            <param name="minNameLength">Minimal name length.</param>
            <param name="maxNameLength">Maximum name length.</param>
            <param name="minDate">Minimum date.</param>
            <param name="validPermissions">Array of valid permissions characters.</param>
        </member>
        <member name="P:FileCabinetApp.CustomValidator.MinNameLength">
            <summary>
            Gets minimal possible length of the name.
            </summary>
            <value>minNameLength.</value>
        </member>
        <member name="P:FileCabinetApp.CustomValidator.MaxNameLength">
            <summary>
            Gets maximum possible length of the name.
            </summary>
            <value>maxNameLength.</value>
        </member>
        <member name="P:FileCabinetApp.CustomValidator.MinDate">
            <summary>
            Gets minimum possible date.
            </summary>
            <value>minDate.</value>
        </member>
        <member name="P:FileCabinetApp.CustomValidator.IsOnlyLetterName">
            <summary>
            Gets a value indicating whether the name should contain only letter characters or not.
            </summary>
            <value>isOnlyLetterName.</value>
        </member>
        <member name="P:FileCabinetApp.CustomValidator.DateFormat">
            <summary>
            Gets a value of the date format.
            </summary>
            <value>dateFormat.</value>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.GetValidPermissions">
            <summary>
            Gets array of valid permissions.
            </summary>
            <returns>An array of valid permissions.</returns>
        </member>
        <member name="P:FileCabinetApp.CustomValidator.MinSalaryValue">
            <summary>
            Gets a value indicating minimum salary value.
            </summary>
            <value>isOnlyLetterName.</value>
        </member>
        <member name="M:FileCabinetApp.CustomValidator.ValidateParameters(FileCabinetApp.FileCabinetRecordParameterObject)">
            <summary>
            Validates record parameters for creation or editing of a new record.
            </summary>
            <param name="recordParameters">Parameters of the record to validate.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when recordParameters are null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when firstName or lastName is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firstName or lastName less than 2 or more than 60.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firstName or lastName empty or whitespace.</exception>
            <exception cref="T:System.ArgumentException">Thrown when dateOfBirth less than "01-01-1950" or more than current date.</exception>
            <exception cref="T:System.ArgumentException">Thrown when salary less than 0.</exception>
            <exception cref="T:System.ArgumentException">Thrown when record with the specified id isn't found.</exception>
        </member>
        <member name="T:FileCabinetApp.DefaultValidator">
            <summary>
            Validates record parameter by default rules.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DefaultValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.#ctor(System.Int32,System.Int32,System.DateTime,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.DefaultValidator"/> class.
            </summary>
            <param name="minNameLength">Minimal name length.</param>
            <param name="maxNameLength">Maximum name length.</param>
            <param name="minDate">Minimum date.</param>
        </member>
        <member name="P:FileCabinetApp.DefaultValidator.MinNameLength">
            <summary>
            Gets minimal possible length of the name.
            </summary>
            <value>minNameLength.</value>
        </member>
        <member name="P:FileCabinetApp.DefaultValidator.MaxNameLength">
            <summary>
            Gets maximum possible length of the name.
            </summary>
            <value>maxNameLength.</value>
        </member>
        <member name="P:FileCabinetApp.DefaultValidator.MinDate">
            <summary>
            Gets minimum possible date.
            </summary>
            <value>minDate.</value>
        </member>
        <member name="P:FileCabinetApp.DefaultValidator.IsOnlyLetterName">
            <summary>
            Gets a value indicating whether the name should contain only letter characters or not.
            </summary>
            <value>isOnlyLetterName.</value>
        </member>
        <member name="P:FileCabinetApp.DefaultValidator.DateFormat">
            <summary>
            Gets a value of the date format.
            </summary>
            <value>dateFormat.</value>
        </member>
        <member name="P:FileCabinetApp.DefaultValidator.MinSalaryValue">
            <summary>
            Gets a value indicating minimum salary value.
            </summary>
            <value>isOnlyLetterName.</value>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.GetValidPermissions">
            <summary>
            Gets array of valid permissions.
            </summary>
            <returns>An array of valid permissions.</returns>
        </member>
        <member name="M:FileCabinetApp.DefaultValidator.ValidateParameters(FileCabinetApp.FileCabinetRecordParameterObject)">
            <summary>
            Validates record parameters for creation or editing of a new record.
            </summary>
            <param name="recordParameters">Parameters of the record to validate.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when recordParameters are null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when firstName or lastName is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firstName or lastName less than 2 or more than 60.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firstName or lastName empty or whitespace.</exception>
            <exception cref="T:System.ArgumentException">Thrown when dateOfBirth less than "01-01-1950" or more than current date.</exception>
            <exception cref="T:System.ArgumentException">Thrown when salary less than 0.</exception>
            <exception cref="T:System.ArgumentException">Thrown when record with the specified id isn't found.</exception>
        </member>
        <member name="T:FileCabinetApp.FileCabinetFilesystemService">
            <summary>
            Represent file cabinet service for work with filesytem.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.#ctor(System.IO.FileStream,FileCabinetApp.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetFilesystemService"/> class.
            </summary>
            <param name="stream">Stream to write.</param>
            <param name="validator">Validator to check record parameters.</param>
        </member>
        <member name="P:FileCabinetApp.FileCabinetFilesystemService.DateFormat">
            <summary>
            Gets a value of the date format.
            </summary>
            <value>dateFormat.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetFilesystemService.GetStat">
            <summary>
            Gets information about the number of records in the service.
            </summary>
            <value>
            <records.Count>Information about the number of records in the service.</records.Count>
            </value>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetValidPermissions">
            <summary>
            Gets array of valid permissions.
            </summary>
            <returns>An array of valid permissions.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.CreateRecord(FileCabinetApp.FileCabinetRecordParameterObject)">
            <summary>
            Creates a new value and adds it into the records list.
            </summary>
            <param name="recordParameters">Parameters of the value to change.</param>
            <returns>Id of the created value.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetRecords">
            <summary>
            Gets copy of the records as value array.
            </summary>
            <returns>Array of the records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.EditRecord(System.Int32,FileCabinetApp.FileCabinetRecordParameterObject)">
            <summary>
            Edits the existing value with the specified id.
            </summary>
            <param name="id">Id of the value to edit.</param>
            <param name="recordParameters">Parameters of the value to change.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByFirstName(System.String)">
            <summary>
            Looks for records with firstName property equal to the specified firstName parameter.
            </summary>
            <param name="firstName">First name of the records to seek.</param>
            <returns>Array of the found records with the specified firstName.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByLastName(System.String)">
            <summary>
            Looks for records with lastName property equal to the specified lastName parameter.
            </summary>
            <param name="lastName">Last name of the records to seek.</param>
            <returns>Array of the found records with the specified lastName.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByDateOfBirth(System.DateTime)">
            <summary>
            Looks for records with dateOfBirth property equal to the specified date parameter.
            </summary>
            <param name="dateOfBirth">Date of birth of the records to seek.</param>
            <returns>Array of the found records with the specified dateOfBirth.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.ChangeValidatorToCustom">
            <summary>
            Creates a copy of the FileCabinetMemoryService as FileCabinetDefaultService.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.ChangeValidatorToDefault">
            <summary>
            Creates a copy of the FileCabinetMemoryService as FileCabinetCustomService.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.MakeSnapshot">
            <summary>
            Makes snapshot of the IFileCabinetService with the copy of the records.
            </summary>
            <returns>FileCabinetServiceSnapshot of the current IFileCabinetService instance.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Compares data from snapshot and updates records.
            </summary>
            <param name="snapshot">Snapshot to compare with.</param>
            <exception cref="T:System.NotImplementedException">Throws.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.RemoveRecord(System.Int32)">
            <summary>
            Removes record with the specified id.
            </summary>
            <param name="id">Id of the record to delete.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Purge">
            <summary>
            Removes deleted records from source database.
            </summary>
        </member>
        <member name="T:FileCabinetApp.FileCabinetMemoryService">
            <summary>
            Manages information about the records in file cabinet.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.#ctor(FileCabinetApp.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetMemoryService"/> class.
            </summary>
            <param name="validator">Parameter of validator to use.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.#ctor(FileCabinetApp.IRecordValidator,System.Collections.Generic.IList{FileCabinetApp.FileCabinetRecord},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{FileCabinetApp.FileCabinetRecord}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{FileCabinetApp.FileCabinetRecord}},System.Collections.Generic.Dictionary{System.DateTime,System.Collections.Generic.List{FileCabinetApp.FileCabinetRecord}},System.Collections.Generic.Dictionary{System.Int32,FileCabinetApp.FileCabinetRecord})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetMemoryService"/> class.
            </summary>
            <param name="validator">Parameter of validator to use.</param>
            <param name="records">Parameter to assign to records list.</param>
            <param name="firstNameDictionary">Parameter to assign to firstNameDictionary dictionary.</param>
            <param name="lastNameDictionary">Parameter to assign to lastNameDictionary dictionary.</param>
            <param name="dateOfBirthDictionary">Parameter to assign to dateOfBirthDictionary dictionary.</param>
            <param name="recordIdDictionary">Parameter to assign to recordIdDictionary dictionary.</param>
        </member>
        <member name="P:FileCabinetApp.FileCabinetMemoryService.DateFormat">
            <summary>
            Gets a value of the date format.
            </summary>
            <value>dateFormat.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetMemoryService.GetStat">
            <summary>
            Gets information about the number of records in the service.
            </summary>
            <value>
            <records.Count>Information about the number of records in the service.</records.Count>
            </value>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetValidPermissions">
            <summary>
            Gets array of valid permissions.
            </summary>
            <returns>An array of valid permissions.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.CreateRecord(FileCabinetApp.FileCabinetRecordParameterObject)">
            <summary>
            Creates a new record and adds it into the records list.
            </summary>
            <param name="recordParameters">Parameters of the record to change.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when recordParameters are null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when firstName or lastName is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firstName or lastName less than 2 or more than 60.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firstName or lastName empty or whitespace.</exception>
            <exception cref="T:System.ArgumentException">Thrown when dateOfBirth less than "01-01-1950" or more than current date.</exception>
            <exception cref="T:System.ArgumentException">Thrown when salary less than 0.</exception>
            <returns>Id of the created record.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetRecords">
            <summary>
            Gets copy of the records as record array.
            </summary>
            <returns>Array of the records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.EditRecord(System.Int32,FileCabinetApp.FileCabinetRecordParameterObject)">
            <summary>
            Edits the existing record with the specified id.
            </summary>
            <param name="id">Id of the record to edit.</param>
            <param name="recordParameters">Parameters of the record to change.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when recordParameters are null.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when firstName or lastName is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firstName or lastName less than 2 or more than 60.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firstName or lastName empty or whitespace.</exception>
            <exception cref="T:System.ArgumentException">Thrown when dateOfBirth less than "01-01-1950" or more than current date.</exception>
            <exception cref="T:System.ArgumentException">Thrown when salary less than 0.</exception>
            <exception cref="T:System.ArgumentException">Thrown when record with the specified id isn't found.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByFirstName(System.String)">
            <summary>
            Looks for records with firstName property equal to the specified firstName parameter.
            </summary>
            <param name="firstName">First name of the records to seek.</param>
            <returns>Array of the found records with the specified firstName.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByLastName(System.String)">
            <summary>
            Looks for records with lastName property equal to the specified lastName parameter.
            </summary>
            <param name="lastName">Last name of the records to seek.</param>
            <returns>Array of the found records with the specified lastName.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByDateOfBirth(System.DateTime)">
            <summary>
            Looks for records with dateOfBirth property equal to the specified date parameter.
            </summary>
            <param name="dateOfBirth">Date of birth of the records to seek.</param>
            <returns>Array of the found records with the specified dateOfBirth.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.ChangeValidatorToCustom">
            <summary>
            Creates a copy of the FileCabinetMemoryService as FileCabinetDefaultService.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.ChangeValidatorToDefault">
            <summary>
            Creates a copy of the FileCabinetMemoryService as FileCabinetCustomService.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.MakeSnapshot">
            <summary>
            Makes snapshot of the FileCabinetMemoryService with the copy of the records.
            </summary>
            <returns>FileCabinetServiceSnapshot of the current FileCabinetMemoryService instance.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Compares data from snapshot and updates records.
            </summary>
            <param name="snapshot">Snapshot to compare with.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Purge">
            <summary>
            Removes deleted records from source database.
            </summary>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecord">
            <summary>
            Represents user's record in the FileCabinet.
            </summary>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Id">
            <summary>
            Gets or sets Id of the record.
            </summary>
            <value>
            <Id>Id of the record.</Id>
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.FirstName">
            <summary>
            Gets or sets user's FirstName.
            </summary>
            <value>
            <FirstName>First name in the record.</FirstName>
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.LastName">
            <summary>
            Gets or sets user's LastName.
            </summary>
            <value>
            <LastName>Last name in the record.</LastName>
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.DateOfBirth">
            <summary>
            Gets or sets user's DateOfBirth.
            </summary>
            <value>
            <DateOfBirth>Date of birth in the record.</DateOfBirth>
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Status">
            <summary>
            Gets or sets user's Status.
            </summary>
            <value>
            <Status>Status in the record.</Status>
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Salary">
            <summary>
            Gets or sets user's Salary.
            </summary>
            <value>
            <Salary>Salary in the record.</Salary>
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Permissions">
            <summary>
            Gets or sets user's Permissions.
            </summary>
            <value>
            <Permissions>Permissions in the record.</Permissions>
            </value>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordCsvReader">
            <summary>
            Represents csv reader class for the file cabinet records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvReader.#ctor(System.IO.StreamReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordCsvReader"/> class.
            </summary>
            <param name="reader">Reader with which data should be reader.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvReader.ReadAll">
            <summary>
            Reads all string via the specified reader.
            </summary>
            <returns>Read strings as FileCabinetRecord list.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordCsvWriter">
            <summary>
            Represents csv writer class for the file cabinet records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordCsvWriter"/> class.
            </summary>
            <param name="writer">Writer with which data should be written.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.Write(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Writes record to the specified writer.
            </summary>
            <param name="record">Record to write.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordParameterObject">
            <summary>
            Represents parameter object of the record.
            </summary>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordParameterObject.FirstName">
            <summary>
            Gets user's FirstName.
            </summary>
            <value>
            <FirstName>First name in the record.</FirstName>
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordParameterObject.LastName">
            <summary>
            Gets user's LastName.
            </summary>
            <value>
            <LastName>Last name in the record.</LastName>
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordParameterObject.DateOfBirth">
            <summary>
            Gets user's DateOfBirth.
            </summary>
            <value>
            <DateOfBirth>Date of birth in the record.</DateOfBirth>
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordParameterObject.Status">
            <summary>
            Gets user's Status.
            </summary>
            <value>
            <Status>Status in the record.</Status>
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordParameterObject.Salary">
            <summary>
            Gets user's Salary.
            </summary>
            <value>
            <Salary>Salary in the record.</Salary>
            </value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordParameterObject.Permissions">
            <summary>
            Gets user's Permissions.
            </summary>
            <value>
            <Permissions>Permissions in the record.</Permissions>
            </value>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordXmlReader">
            <summary>
            Represents xml reader class for the file cabinet records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlReader.#ctor(System.Xml.XmlReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordXmlReader"/> class.
            </summary>
            <param name="reader">Reader with which data should be read.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlReader.ReadAll">
            <summary>
            Reads all string via the specified reader.
            </summary>
            <returns>Read strings as FileCabinetRecord list.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordXmlWriter">
            <summary>
            Represents xml writer class for the file cabinet records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.#ctor(System.Xml.XmlWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordXmlWriter"/> class.
            </summary>
            <param name="writer">Writer with which data should be written.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.Write(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Writes record to the specified writer.
            </summary>
            <param name="record">Record to write.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetServiceSnapshot">
            <summary>
            Represent snapshot of the IFileCabinetService.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.#ctor(System.Collections.Generic.IReadOnlyCollection{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetServiceSnapshot"/> class.
            </summary>
            <param name="records">Records of the snapshotted IFileCabinetService instance.</param>
        </member>
        <member name="P:FileCabinetApp.FileCabinetServiceSnapshot.Records">
            <summary>
            Gets collection of records.
            </summary>
            <value>
            <Records>Collection of records.</Records>
            </value>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.SaveToCsv(System.IO.StreamWriter)">
            <summary>
            Saves records of the snapshot into the specified csv file.
            </summary>
            <param name="writer">Writer to write the data.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.SaveToXml(System.IO.StreamWriter)">
            <summary>
            Saves records of the snapshot into the specified xml file.
            </summary>
            <param name="writer">Writer to write the data.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.LoadFromCsv(System.IO.StreamReader)">
            <summary>
            Replaces records of the snapshot with the records from specified csv file.
            </summary>
            <param name="reader">Reader of the csv file to read.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.LoadFromXml(System.IO.StreamReader)">
            <summary>
            Replaces records of the snapshot with the records from specified xmlfile.
            </summary>
            <param name="reader">Reader of the xml file to read.</param>
        </member>
        <member name="T:FileCabinetApp.IFileCabinetService">
            <summary>
            Provides basic structure and methods of the file cabinet.
            </summary>
        </member>
        <member name="P:FileCabinetApp.IFileCabinetService.DateFormat">
            <summary>
            Gets a value of the date format.
            </summary>
            <value>dateFormat.</value>
        </member>
        <member name="P:FileCabinetApp.IFileCabinetService.GetStat">
            <summary>
            Gets information about the number of records in the service.
            </summary>
            <value>
            <records.Count>Information about the number of records in the service.</records.Count>
            </value>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetValidPermissions">
            <summary>
            Gets array of valid permissions.
            </summary>
            <returns>An array of valid permissions.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.CreateRecord(FileCabinetApp.FileCabinetRecordParameterObject)">
            <summary>
            Creates a new record and adds it into the records list.
            </summary>
            <param name="recordParameters">Parameters of the record to change.</param>
            <returns>Id of the created record.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetRecords">
            <summary>
            Gets copy of the records as record array.
            </summary>
            <returns>Array of the records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.EditRecord(System.Int32,FileCabinetApp.FileCabinetRecordParameterObject)">
            <summary>
            Edits the existing record with the specified id.
            </summary>
            <param name="id">Id of the record to edit.</param>
            <param name="recordParameters">Parameters of the record to change.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByFirstName(System.String)">
            <summary>
            Looks for records with firstName property equal to the specified firstName parameter.
            </summary>
            <param name="firstName">First name of the records to seek.</param>
            <returns>Array of the found records with the specified firstName.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByLastName(System.String)">
            <summary>
            Looks for records with lastName property equal to the specified lastName parameter.
            </summary>
            <param name="lastName">Last name of the records to seek.</param>
            <returns>Array of the found records with the specified lastName.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByDateOfBirth(System.DateTime)">
            <summary>
            Looks for records with dateOfBirth property equal to the specified date parameter.
            </summary>
            <param name="dateOfBirth">Date of birth of the records to seek.</param>
            <returns>Array of the found records with the specified dateOfBirth.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.ChangeValidatorToCustom">
            <summary>
            Creates a copy of the FileCabinetMemoryService as FileCabinetDefaultService.
            </summary>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.ChangeValidatorToDefault">
            <summary>
            Creates a copy of the FileCabinetMemoryService as FileCabinetCustomService.
            </summary>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.MakeSnapshot">
            <summary>
            Makes snapshot of the IFileCabinetService with the copy of the records.
            </summary>
            <returns>FileCabinetServiceSnapshot of the current IFileCabinetService instance.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Compares data from snapshot and updates records.
            </summary>
            <param name="snapshot">Snapshot to compare with.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.RemoveRecord(System.Int32)">
            <summary>
            Removes record with the specified id.
            </summary>
            <param name="id">Id of the record to delete.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Purge">
            <summary>
            Removes deleted records from source database.
            </summary>
        </member>
        <member name="T:FileCabinetApp.IRecordValidator">
            <summary>
            Validator of the record parameters.
            </summary>
        </member>
        <member name="P:FileCabinetApp.IRecordValidator.MinNameLength">
            <summary>
            Gets minimal possible length of the name.
            </summary>
            <value>minNameLength.</value>
        </member>
        <member name="P:FileCabinetApp.IRecordValidator.MaxNameLength">
            <summary>
            Gets maximum possible length of the name.
            </summary>
            <value>maxNameLength.</value>
        </member>
        <member name="P:FileCabinetApp.IRecordValidator.MinDate">
            <summary>
            Gets minimum possible date.
            </summary>
            <value>minDate.</value>
        </member>
        <member name="P:FileCabinetApp.IRecordValidator.IsOnlyLetterName">
            <summary>
            Gets a value indicating whether the name should contain only letter characters or not.
            </summary>
            <value>isOnlyLetterName.</value>
        </member>
        <member name="P:FileCabinetApp.IRecordValidator.DateFormat">
            <summary>
            Gets a value of the date format.
            </summary>
            <value>dateFormat.</value>
        </member>
        <member name="P:FileCabinetApp.IRecordValidator.MinSalaryValue">
            <summary>
            Gets a value indicating minimum salary value.
            </summary>
            <value>isOnlyLetterName.</value>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.GetValidPermissions">
            <summary>
            Gets array of valid permissions.
            </summary>
            <returns>An array of valid permissions.</returns>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.ValidateParameters(FileCabinetApp.FileCabinetRecordParameterObject)">
            <summary>
            Validates record parameters for creation or editing of a new record.
            </summary>
            <param name="recordParameters">Parameters of the record to validate.</param>
        </member>
        <member name="T:FileCabinetApp.Program">
            <summary>
            Represents Console App to exchange information with the FileCabinet.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Program.Main(System.String[])">
            <summary>
            Runs Console Application.
            </summary>
            <param name="args">The arguments of the application.</param>
        </member>
    </members>
</doc>
